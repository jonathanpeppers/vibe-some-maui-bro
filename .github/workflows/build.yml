name: Build .NET MAUI App

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        # NOTE: macos-latest was 14
        os: [windows-latest, macos-15]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Install MAUI workloads
      run: dotnet workload install maui --version 9.0.100

    - name: Create artifacts directory (Windows)
      if: runner.os == 'Windows'
      run: New-Item -ItemType Directory -Path "artifacts" -Force
      shell: powershell

    - name: Create artifacts directory (Unix)
      if: runner.os != 'Windows'
      run: mkdir -p artifacts
      shell: bash

    - name: Build
      run: dotnet build VibeSomeMauiBro/VibeSomeMauiBro.csproj --configuration ${{ github.event_name == 'pull_request' && 'Debug' || 'Release' }} --verbosity normal -bl:artifacts/build-${{ matrix.os }}.binlog

    - name: List build outputs for debugging
      run: |
        echo "Build outputs:"
        find VibeSomeMauiBro/bin/Release -type f -name "*.apk" -o -name "*.aab" -o -name "*.ipa" -o -name "*.exe" -o -name "*.dll" | head -20 || true
        find VibeSomeMauiBro/bin/Release -name "*.app" -type d | head -10 || true
      shell: bash

    - name: Collect Android artifacts
      if: runner.os == 'Linux' || runner.os == 'Windows' || runner.os == 'macOS'
      run: |
        # Copy Android APK and AAB files if they exist
        if [ -d "VibeSomeMauiBro/bin/Release/net9.0-android" ]; then
          cp VibeSomeMauiBro/bin/Release/net9.0-android/*.apk artifacts/ 2>/dev/null || true
          cp VibeSomeMauiBro/bin/Release/net9.0-android/*.aab artifacts/ 2>/dev/null || true
        fi
      shell: bash

    - name: Collect Windows artifacts
      if: runner.os == 'Windows'
      run: |
        # Copy Windows unpackaged app directory if it exists
        if (Test-Path "VibeSomeMauiBro/bin/Release/net9.0-windows*") {
          $windowsDir = Get-ChildItem "VibeSomeMauiBro/bin/Release/net9.0-windows*" | Select-Object -First 1
          if ($windowsDir) {
            Copy-Item -Path $windowsDir.FullName -Destination "artifacts/windows-app" -Recurse -Force
          }
        }
      shell: powershell

    - name: Collect iOS artifacts  
      if: runner.os == 'macOS'
      run: |
        # Copy iOS artifacts if they exist (IPA, or at least the built assemblies)
        if [ -d "VibeSomeMauiBro/bin/Release/net9.0-ios" ]; then
          cp VibeSomeMauiBro/bin/Release/net9.0-ios/*.ipa artifacts/ 2>/dev/null || true
          # If no IPA, copy the built assemblies for inspection
          if [ ! -f artifacts/*.ipa ]; then
            mkdir -p artifacts/ios-assemblies
            cp VibeSomeMauiBro/bin/Release/net9.0-ios/*.dll artifacts/ios-assemblies/ 2>/dev/null || true
          fi
        fi
      shell: bash

    - name: Collect macOS artifacts
      if: runner.os == 'macOS' 
      run: |
        # Copy macOS artifacts (.app bundles or built assemblies)
        if [ -d "VibeSomeMauiBro/bin/Release/net9.0-maccatalyst" ]; then
          find VibeSomeMauiBro/bin/Release/net9.0-maccatalyst -name "*.app" -type d -exec cp -R {} artifacts/ \; 2>/dev/null || true
          # If no .app bundle, copy the built assemblies for inspection  
          if [ ! -d artifacts/*.app ]; then
            mkdir -p artifacts/maccatalyst-assemblies
            cp VibeSomeMauiBro/bin/Release/net9.0-maccatalyst/*.dll artifacts/maccatalyst-assemblies/ 2>/dev/null || true
          fi
        fi
      shell: bash

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-artifacts-${{ matrix.os }}
        path: artifacts/
        retention-days: 30
